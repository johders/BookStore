@inject NavigationManager NavigationManager

@inject IBookService BookService
@inject ICommonService commonService

<SectionContent SectionName="PageTitle">
	@if (commonService.IsWeb)
	{
		<h1 class="m-0 text-white fw-bold">@_book?.Title - Book Description</h1>
	}
	else
	{
		<span>@_book?.Title</span>
	}
</SectionContent>

@if (_book is not null)
{
	<div class="container mt-5">
		<div class="row">
			<div class="col-sm-4 d-flex flex-column align-items-center">

				<div class="image-wrapper">
					<img src="@_book.Image" alt="_book.Title" class="img-responsive" />
				</div>

				<div class="my-4">
					<table class="table table-bordered">
						<tbody>
							<tr>
								<th>Book Id</th>
								<td>@_book.Id</td>
							</tr>
							<tr>
								<th>Format</th>
								<td>@_book.Format</td>
							</tr>
							<tr>
								<th>No. of pages</th>
								<td>@_book.NumPages</td>
							</tr>
						</tbody>
					</table>
				</div>

				<a href="@_book.BookLink" target="_blank" class="btn btn-book-link fab">
					@(string.IsNullOrWhiteSpace(_book.BookLink) ? "Read More" : "Buy Now")
				</a>

			</div>
			<div class="col-sm-8">

				<h2 class="fw-bold">@_book.Title</h2>
				<h5 class="mt-3">
					<span>by</span>
					<a href="/authors/@_book.Author.Slug/books" title="Books by @_book.Author.Name" class="text-secondary fw-bold">@_book.Author.Name</a>
				</h5>
				<hr />
				<h3 class="my-3">Description</h3>
				<p class="">
					@_book.Description
				</p>

				<h4 class="my-3">Genres</h4>

				<div class="d-flex flex-wrap">
					@foreach (var g in _book.Genres)
					{
						<a href="/?genre=@g.Slug" class="genre-tag" title="@g.Name Books">@g.Name</a>
					}
				</div>

				<hr style="height: 5px" class="text-main" />
				<h4>Similar books</h4>

				<div class="row">
					@foreach (var b in _similarBooks)
					{
						<div class="col-6 col-sm-4 mb-4">
							<a href="/books/@b.Id" title="@b.Title">
								<div class=" p-2 d-flex flex-column justify-content-center align-items-center bg-white">
									<img src="@b.Image" alt="b.Title" class="img-fluid similar-book-img" />
									<label class="text-truncate mt-2 similar-book-title">@b.Title</label>
								</div>
							</a>
						</div>
					}

				</div>


			</div>
		</div>




	</div>
}



@code {

	[Parameter, EditorRequired]
	public int BookId { get; set; }

	private BookDetailsDto? _book;
	private BookListDto[] _similarBooks = [];

	protected override async Task OnInitializedAsync()
	{
		if (BookId <= 0)
		{
			NavigationManager.NavigateTo("/", replace: true);
			return;
		}

		var similarBooksTask = BookService.GetSimilarBooksAsync(BookId, 6);
		_book = await BookService.GetBookAsync(BookId);
		_similarBooks = await similarBooksTask;

		if (_book is null)
		{
			NavigationManager.NavigateTo("/", replace: true);
			return;
		}
	}

}

